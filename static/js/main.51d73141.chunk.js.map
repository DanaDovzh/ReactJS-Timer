{"version":3,"sources":["components/Buttons.js","components/ChangeSize.js","components/Timer.js","components/TimerWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","numbers","onStartTimer","startTimer","onStopTimer","stopTimer","disableBtnStart","disableBtnStop","className","onClick","disabled","ChangeSize","changeTime","changeBtns","indexBtn","type","value","Timer","props","generalTimer","document","getElementById","state","id","lineTimer","buttons","classList","add","setState","btnStart","btnStop","timerID","setInterval","tick","stepTimer","clearInterval","sign","timeNow","currentTime","startTime","this","autostart","contains","remove","currentValue","Component","defaultProps","TimerWrapper","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.51d73141.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Buttons({ numbers, onStartTimer, startTimer, onStopTimer, stopTimer, disableBtnStart, disableBtnStop }) {\n\n    return <div className=\"buttons\">\n        {!numbers && null}\n        {numbers === 1 &&\n            <button\n                onClick={() => {\n                    onStartTimer();\n                    startTimer()\n                }}\n                disabled={disableBtnStart}>\n                Start\n            </button>\n        }\n        {numbers === 2 && (\n            <>\n                <button\n                    onClick={() => {\n                        onStartTimer();\n                        startTimer()\n                    }}\n                    disabled={disableBtnStart}>\n                    Start\n                </button>\n                <button\n                    onClick={() => {\n                        onStopTimer();\n                        stopTimer()\n                    }}\n                    disabled={disableBtnStop}>\n                    Stop\n                </button>\n            </>\n        )}\n    </div>\n}\n\nexport default Buttons;\n","import React from 'react';\n\nfunction  ChangeSize({changeTime, changeBtns, indexBtn}) {\n    return (indexBtn) ? (\n        <div className = \"change-size\">\n            <input type = \"button\" value = \"+\" onClick = {() => changeTime(\"+\")} disabled = {changeBtns}></input>\n            <input type = \"button\" value=\"-\" onClick = {() => changeTime(\"-\")} disabled = {changeBtns}></input>\n        </div>\n    ) : <div></div>\n}\n\nexport default ChangeSize;","import React, { Component} from 'react';\nimport Style from 'style-it';\nimport Buttons from \"./Buttons\"\nimport  ChangeSize from \"./ChangeSize\";\nimport \"../css/general.css\";\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeNow: props.startTime,\n            stepTimer: props.stepTimer,\n            id: props.id,\n            btnStart: false,\n            btnStop: true,\n            currentTime: props.startTime,\n            changeBtns: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.autostart) {\n            this.startTimer();\n        }\n    }\n    startTimer = () => {\n        const generalTimer = document.getElementById(this.state.id);\n        const lineTimer = document.getElementById(this.state.id + \"-line\");\n        if (this.props.buttons !== 2) {\n            lineTimer.classList.add(\"timer-line\");\n            generalTimer.classList.add(\"timer\")\n        }\n        this.setState({ btnStart: true, btnStop: false, changeBtns: true });\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000 * this.state.stepTimer\n        );\n    }\n\n    stopTimer = () => {\n        this.setState({ btnStart: false, btnStop: true, changeBtns: false })\n        clearInterval(this.timerID);\n    }\n    tick() {\n        const generalTimer = document.getElementById(this.state.id);\n        const lineTimer = document.getElementById(this.state.id + \"-line\");\n       \n        if (this.state.timeNow > 0) {\n            if (!generalTimer.classList.contains(\"timer\") && this.props.buttons !== 2) {\n                generalTimer.classList.add(\"timer\");\n                lineTimer.classList.add(\"timer-line\");\n            }\n            this.setState({\n                timeNow: this.state.timeNow - this.state.stepTimer\n            });\n        } else {\n            if (this.props.buttons !== 2) {\n                lineTimer.classList.remove(\"timer-line\");\n                generalTimer.classList.remove(\"timer\");\n            }\n\n            this.setState({\n                timeNow: this.state.currentTime\n            });\n            if (!this.props.autostart) {\n                this.setState({ btnStart: false, changeBtns: false });\n                clearInterval(this.timerID);\n            }\n        }\n    }\n\n     changeTime = (sign) => {\n        if(sign === \"+\") {\n            this.setState({ timeNow: this.state.timeNow + 1});\n            this.setState({currentTime: this.state.currentTime + 1});\n        } else if (sign === \"-\") {\n            this.state.timeNow > 0 ? this.setState({timeNow: this.state.timeNow - 1}) : this.setState({timeNow: 0});\n            this.state.currentTime > 0 ? this.setState({currentTime: this.state.currentTime - 1}) : this.setState({currentTime: 0});\n        }\n    }\n\n    render() {\n        return (\n            <Style>\n                {`\n                .timer-line {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 100%;\n                    z-index: 2;\n                    animation: line ${this.state.currentTime}s  linear forwards;\n                }\n\n                .timer-line::after {\n                    content: \"\";\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 50%;\n                    height: 100%;\n                    background-color: #978989;\n                  }\n\n                  .timer::before {\n                    content: \"\";\n                    position: absolute;\n                    top: 0;\n                    width: 50%;\n                    height: 100%;\n                    background-color: #150768;\n                    z-index: 3;\n                    left: 0;\n                    animation: line_left ${this.state.currentTime}s steps(1, end) forwards;\n                  }\n                  \n                  .timer::after {\n                    content: \"\";\n                    position: absolute;\n                    top: 0;\n                    width: 50%;\n                    height: 100%;\n                    background-color: #978989;\n                    z-index: 3;\n                    right: 0;\n                    animation: line_right ${this.state.currentTime}s steps(1, end) forwards;\n                  }\n\n            `}\n                <div className=\"block-timer\">\n                    <div id={this.state.id} className=\"\">\n                        <div id={`${this.state.id}` + \"-line\"} />\n                        <div className=\"timer-body\">\n                            <div className=\"timer-number\">{this.state.timeNow}</div>\n                            <ChangeSize \n                              currentValue = {this.state.timeNow}\n                              changeTime = {this.changeTime}\n                              changeBtns = {this.state.changeBtns}\n                              indexBtn = {this.props.buttons}\n                            />\n                        </div>\n                    </div>\n                    <Buttons\n                        numbers={this.props.buttons}\n                        onStartTimer={this.props.onStartTimer}\n                        startTimer={this.startTimer}\n                        onStopTimer={this.props.onStopTimer}\n                        stopTimer={this.stopTimer}\n                        disableBtnStart={this.state.btnStart}\n                        disableBtnStop={this.state.btnStop}\n                    />\n                </div>\n            </Style>\n        )\n    }\n\n}\nTimer.defaultProps = {\n    autostart: false,\n}\nexport default Timer;","import React, { Component } from 'react';\nimport Timer from \"./Timer\";\n\nclass TimerWrapper extends Component {\n    state = {\n        startTime: 12\n    }\n    onStartTimer() {\n        console.log(\"Timer stars\");\n    }\n    onStopTimer() {\n        console.log(\"Timer stop\");\n    }\n\n     render() {\n        return (\n            <div className=\"main\">\n                <Timer\n                    stepTimer={0.5}\n                    startTime={this.state.startTime}\n                    onStartTimer={this.onStartTimer}\n                    onStopTimer={this.onStopTimer}\n                    id={1}\n                    buttons={1}\n                />\n                <Timer\n                    stepTimer={1}\n                    startTime={15}\n                    onStartTimer={this.onStartTimer}\n                    onStopTimer={this.onStopTimer}\n                    id={3}\n                    buttons={2}\n                />\n                <Timer\n                    stepTimer={2}\n                    startTime={20}\n                    onStartTimer={this.onStartTimer}\n                    onStopTimer={this.onStopTimer}\n                    autostart={true}\n                    id={2}\n                    buttons={0}\n                />\n            </div>\n        )\n    }\n}\n\nexport default TimerWrapper;","import TimerWrapper from \"./components/TimerWrapper\";\n\nfunction App() {\n  return (\n    <TimerWrapper \n      startTime = {10}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}